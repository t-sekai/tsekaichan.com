<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>t-sekai</title>
    <link>https://t-sekai.github.io/zh-tw/</link>
    <description>Recent content on t-sekai</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 01 Mar 2023 03:01:50 -0800</lastBuildDate><atom:link href="https://t-sekai.github.io/zh-tw/index.xml" rel="self" type="application/rss+xml" /><item>
      <title>ш╡╖щ╗Ю</title>
      <link>https://t-sekai.github.io/zh-tw/posts/introduction/</link>
      <pubDate>Wed, 01 Mar 2023 03:01:50 -0800</pubDate>
      
      <guid>https://t-sekai.github.io/zh-tw/posts/introduction/</guid>
      <description>хУИхШНя╝БцИСцШпшй╣ц╛дце╖уАВцИСх░ЗщЦЛхзЛч┤АщМДф╕Аф║ЫщЧЬцЦ╝цИСчФЯц┤╗ф╕нчЪДцЩВхИ╗хТМцГ│ц│ХуАВцИСц▒║хоЪщАЩщ║╝хБЪчЪДхОЯхЫацШпя╝Ъ
шоУцИСчЪДхо╢ф║║хТМцЬЛхПЛчЯещБУцИСчЪДчФЯц┤╗уАВ шоУцЬкф╛ЖчЪДшЗкх╖▒чЯещБУцИСцЫ╛ч╢УхЬихБЪф╗Ащ║╝уАВ шоУцИСч╖┤ч┐Тф╕НхРМшкЮшиАуАВ шоУцИСчФЯц┤╗цЫ┤цЬЙцХИчОЗхТМшиШф╜ПчФЯц┤╗ф╕нчЪДцЩВцЩВхИ╗хИ╗уАВ щЦЛхзЛхРзя╝Б</description>
    </item>
    
    <item>
      <title>Markdown ржПрж░ ржиржорзБржирж╛</title>
      <link>https://t-sekai.github.io/zh-tw/posts/markdown-sample/</link>
      <pubDate>Mon, 08 Jun 2020 08:06:25 +0600</pubDate>
      
      <guid>https://t-sekai.github.io/zh-tw/posts/markdown-sample/</guid>
      <description>ржПржЗ ржиржорзБржирж╛ ржкрзЛрж╕рзНржЯржЯрж┐ ржПржЗ ржмрж┐рж╖рзЯржЧрзБрж▓рзЛ ржкрж░рзАржХрзНрж╖рж╛ ржХрж░рж╛рж░ ржЬржирзНржпрзЗ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗржГ
ржПржХржЬржи ржнрж┐ржирзНржи ржкрзЛрж╕рзНржЯ рж▓рзЗржЦржХред рж╕рзВржЪрзАржкрждрзНрж░ред Markdown ржХржирзНржЯрзЗржирзНржЯ рж░рзЗржирзНржбрж╛рж░рж┐ржВред ржЧржгрж┐ржд рж░рзЗржирзНржбрж╛рж░рж┐ржВред ржЗржорзЛржЬрж┐ рж░рзЗржирзНржбрж╛рж░рж┐ржВред Markdown Syntax Rendering Headings The following HTML &amp;lt;h1&amp;gt;тАФ&amp;lt;h6&amp;gt; elements represent six levels of section headings. &amp;lt;h1&amp;gt; is the highest section level while &amp;lt;h6&amp;gt; is the lowest.
H1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur?</description>
    </item>
    
    <item>
      <title>рж╢рж░рзНржЯржХрзЛржбрзЗрж░  ржиржорзБржирж╛</title>
      <link>https://t-sekai.github.io/zh-tw/posts/shortcodes/</link>
      <pubDate>Mon, 08 Jun 2020 08:06:25 +0600</pubDate>
      
      <guid>https://t-sekai.github.io/zh-tw/posts/shortcodes/</guid>
      <description>ржПржЗ ржиржорзБржирж╛ ржкрзЛрж╕рзНржЯржЯрж┐ ржПржЗ ржмрж┐рж╖рзЯржЧрзБрж▓рзЛ ржкрж░рзАржХрзНрж╖рж╛ ржХрж░рж╛рж░ ржЬржирзНржпрзЗ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗржГ
ржбрж┐ржлрж▓рзНржЯ рж╣рж┐рж░рзЛ ржЗржорзЗржЬред ржмрж┐ржнрж┐ржирзНржи рж╢рж░рзНржЯржХрзЛржбред ржПрж▓рж╛рж░рзНржЯ ржПржЗ ржерж┐ржорзЗрж░ ржоржзрзНржпрзЗ ржПржЗ рж╕ржХрж▓ ржПрж▓рж╛рж░рзНржЯ рж░рзЯрзЗржЫрзЗржГ
ржПржЯрж╛ type=&amp;quot;success&amp;quot; ржжрж┐рзЯрзЗ ржиржорзБржирж╛ ржПрж▓рж╛рж░рзНржЯред ржПржЯрж╛ type=&amp;quot;danger&amp;quot; ржжрж┐рзЯрзЗ ржиржорзБржирж╛ ржПрж▓рж╛рж░рзНржЯред ржПржЯрж╛ type=&amp;quot;warning&amp;quot; ржжрж┐рзЯрзЗ ржиржорзБржирж╛ ржПрж▓рж╛рж░рзНржЯред ржПржЯрж╛ type=&amp;quot;info&amp;quot; ржжрж┐рзЯрзЗ ржиржорзБржирж╛ ржПрж▓рж╛рж░рзНржЯред ржПржЯрж╛ type=&amp;quot;dark&amp;quot; ржжрж┐рзЯрзЗ ржиржорзБржирж╛ ржПрж▓рж╛рж░рзНржЯред ржПржЯрж╛ type=&amp;quot;primary&amp;quot; ржжрж┐рзЯрзЗ ржиржорзБржирж╛ ржПрж▓рж╛рж░рзНржЯред ржПржЯрж╛ type=&amp;quot;secondary&amp;quot; ржжрж┐рзЯрзЗ ржиржорзБржирж╛ ржПрж▓рж╛рж░рзНржЯред ржЫржмрж┐ ржХрзЛржи ржзрж░ржирзЗрж░ attribute ржЫрж╛рзЬрж╛ ржЫржмрж┐рж░ ржПржХржЯрж┐ ржиржорзБржирж╛ред height ржПржмржВ width attribute рж╕рж╣ ржЫржмрж┐рж░ ржПржХржЯрж┐ ржиржорзБржирж╛ред height ржПржмржВ width attribute рж╕рж╣ ржорж╛ржЭржЦрж╛ржирзЗ рж╕рзНрждрж╛ржкрж┐ржд ржЫржмрж┐рж░ ржПржХржЯрж┐ ржиржорзБржирж╛ред float attribute рж╕рж╣ ржЫржмрж┐рж░ ржПржХржЯрж┐ ржиржорзБржирж╛ред Lorem ipsum dolor sit amet, consectetur adipiscing elit.</description>
    </item>
    
    <item>
      <title>рж╕ржорзГржжрзНржз ржХржирзНржЯрзЗржирзНржЯ</title>
      <link>https://t-sekai.github.io/zh-tw/posts/rich-content/</link>
      <pubDate>Mon, 08 Jun 2020 08:06:25 +0600</pubDate>
      
      <guid>https://t-sekai.github.io/zh-tw/posts/rich-content/</guid>
      <description>ржПржЗ ржиржорзБржирж╛ ржкрзЛрж╕рзНржЯржЯрж┐ ржПржЗ ржмрж┐рж╖рзЯржЧрзБрж▓рзЛ ржкрж░рзАржХрзНрж╖рж╛ ржХрж░рж╛рж░ ржЬржирзНржпрзЗ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗржГ
ржмрж┐ржнрж╛ржЧ, ржЙржк-ржмрж┐ржнрж╛ржЧрзЗ рж╕рж╛ржЗржбржмрж╛рж░рзЗ ржПржХржЯрж┐рж░ ржнрзЗрждрж░ ржЖрж░рзЗржХржЯрж┐ ржХрж┐ржнрж╛ржмрзЗ ржЖржЫрзЗ рж╕рзЗржЯрж╛ ржжрзЗржЦрж╛ред рж╣рзЗрж░рзЛ ржЫржмрж┐ржЯрж┐ ржкрзЛрж╕рзНржЯ ржпрзЗ ржкржерзЗ ржЖржЫрзЗ рж╕рзЗ ржкржерзЗ images ржлрзЛрж▓рзНржбрж╛рж░ ржП ржерж╛ржХржмрзЗред ржмрж┐ржнрж┐ржирзНржи ржорж┐ржбрж┐рзЯрж╛ ржпрзЗржоржи ржЫржмрж┐, ржЯрзБржЗржЯ, ржЗржЙржЯрж┐ржЙржм ржнрж┐ржбрж┐ржУ, ржнрзАржорзЗржУ ржнрж┐ржбрж┐ржУ ржЗрждрзНржпрж╛ржжрж┐ рж░рзЗржирзНржбрж╛рж░рж┐ржВред ржЫржмрж┐рж░ ржиржорзБржирж╛ ржЯрзБржЗржЯрзЗрж░ ржирзБржорзБржирж╛ Owl bet you&amp;#39;ll lose this staring contest ЁЯжЙ pic.twitter.com/eJh4f2zncC
&amp;mdash; San Diego Zoo Wildlife Alliance (@sandiegozoo) October 26, 2021 ржЗржЙржЯрж┐ржУржмрзЗрж░ ржнрж┐ржбрж┐ржУ ржиржорзБржирж╛ ржнрзАржорзЗржУ ржнрж┐ржбрж┐ржУ ржиржорзБржирж╛ </description>
    </item>
    
    <item>
      <title>Go ржкрж░рж┐ржЪрж┐рждрж┐</title>
      <link>https://t-sekai.github.io/zh-tw/notes/go/basic/introduction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://t-sekai.github.io/zh-tw/notes/go/basic/introduction/</guid>
      <description> Hello World A sample go program is show here.
package main import &amp;#34;fmt&amp;#34; func main() { message := greetMe(&amp;#34;world&amp;#34;) fmt.Println(message) } func greetMe(name string) string { return &amp;#34;Hello, &amp;#34; + name + &amp;#34;!&amp;#34; } Run the program as below:
$ go run hello.go Variables Normal Declaration:
var msg string msg = &amp;#34;Hello&amp;#34; Shortcut:
msg := &amp;#34;Hello&amp;#34; Constants const Phi = 1.618 </description>
    </item>
    
    <item>
      <title>ржмрзЗрж╕рж┐ржХ ржЯрж╛ржЗржк рж╕ржорзВрж╣</title>
      <link>https://t-sekai.github.io/zh-tw/notes/go/basic/types/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://t-sekai.github.io/zh-tw/notes/go/basic/types/</guid>
      <description>Strings str := &amp;#34;Hello&amp;#34; Multiline string
str := `Multiline string` Numbers Typical types
num := 3 // int num := 3. // float64 num := 3 + 4i // complex128 num := byte(&amp;#39;a&amp;#39;) // byte (alias for uint8) Other Types
var u uint = 7 // uint (unsigned) var p float32 = 22.7 // 32-bit float Arrays // var numbers [5]int numbers := [...]int{0, 0, 0, 0, 0} Pointers func main () { b := *getPointer() fmt.</description>
    </item>
    
    <item>
      <title>ржлрзНрж▓рзЛ ржХржирзНржЯрзНрж░рзЛрж▓</title>
      <link>https://t-sekai.github.io/zh-tw/notes/go/basic/flow-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://t-sekai.github.io/zh-tw/notes/go/basic/flow-control/</guid>
      <description>Condition if day == &amp;#34;sunday&amp;#34; || day == &amp;#34;saturday&amp;#34; { rest() } else if day == &amp;#34;monday&amp;#34; &amp;amp;&amp;amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(&amp;#34;Uh oh&amp;#34;) Switch switch day { case &amp;#34;sunday&amp;#34;: // cases don&amp;#39;t &amp;#34;fall through&amp;#34; by default! fallthrough case &amp;#34;saturday&amp;#34;: rest() default: work() } Loop for count := 0; count &amp;lt;= 10; count++ { fmt.Println(&amp;#34;My counter is at&amp;#34;, count) } entry := []string{&amp;#34;Jack&amp;#34;,&amp;#34;John&amp;#34;,&amp;#34;Jones&amp;#34;} for i, val := range entry { fmt.</description>
    </item>
    
    <item>
      <title>ржлрж╛ржЗрж▓ ржорзНржпрж╛ржирж┐ржкрзБрж▓рзЗрж╢ржи</title>
      <link>https://t-sekai.github.io/zh-tw/notes/go/advanced/files/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://t-sekai.github.io/zh-tw/notes/go/advanced/files/</guid>
      <description> Condition if day == &amp;#34;sunday&amp;#34; || day == &amp;#34;saturday&amp;#34; { rest() } else if day == &amp;#34;monday&amp;#34; &amp;amp;&amp;amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(&amp;#34;Uh oh&amp;#34;) </description>
    </item>
    
    <item>
      <title>ржмрзНржпрж╛рж╢ ржнрзЗрж░рж┐ржпрж╝рзЗржмрж▓</title>
      <link>https://t-sekai.github.io/zh-tw/notes/bash/basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://t-sekai.github.io/zh-tw/notes/bash/basic/</guid>
      <description> Variable NAME=&amp;#34;John&amp;#34; echo $NAME echo &amp;#34;$NAME&amp;#34; echo &amp;#34;${NAME} Condition if [[ -z &amp;#34;$string&amp;#34; ]]; then echo &amp;#34;String is empty&amp;#34; elif [[ -n &amp;#34;$string&amp;#34; ]]; then echo &amp;#34;String is not empty&amp;#34; fi </description>
    </item>
    
    
  </channel>
</rss>
