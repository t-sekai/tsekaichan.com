<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>t-sekai</title>
    <link>https://t-sekai.github.io/</link>
    <description>Recent content on t-sekai</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 14 Mar 2023 04:20:50 -0700</lastBuildDate><atom:link href="https://t-sekai.github.io/index.xml" rel="self" type="application/rss+xml" /><item>
      <title>Snow in San Diego?</title>
      <link>https://t-sekai.github.io/posts/life/2023/march/14/</link>
      <pubDate>Tue, 14 Mar 2023 04:20:50 -0700</pubDate>
      
      <guid>https://t-sekai.github.io/posts/life/2023/march/14/</guid>
      <description>Coco Ichibanya On Wednesday March 1 (3/1), I went to Convoy with Alan, the biggest fan of Coco Ichibanya, right after the LaTeX freshman seminar from Mayer Hall in Revelle. Instead of Lyft/Uber, we went on a MTS this time. We had to change lanes from UCSD to UTC, then UTC to Convoy. It took about 40 minutes to get there. It was worth it because we were eating at Coco that day.</description>
    </item>
    
    <item>
      <title>SoCal ICPC 2023</title>
      <link>https://t-sekai.github.io/posts/life/2023/march/1/</link>
      <pubDate>Wed, 01 Mar 2023 03:31:50 -0800</pubDate>
      
      <guid>https://t-sekai.github.io/posts/life/2023/march/1/</guid>
      <description>Leaving UCSD Four days ago (2/25), I participated in the ICPC Southern California Regionals at Riverside City College. ICPC stands for International Collegiate Programming Contest. It was my first time participating adn representing UCSD, so I was very excited. I was part of the second UCSD team: UCSD Team 2. My teammates were Shubham and Victor.
Since network is prohibbited during the contest, I had to compute a reference sheet the night beforehand.</description>
    </item>
    
    <item>
      <title>Introduction</title>
      <link>https://t-sekai.github.io/posts/introduction/</link>
      <pubDate>Wed, 01 Mar 2023 03:01:50 -0800</pubDate>
      
      <guid>https://t-sekai.github.io/posts/introduction/</guid>
      <description>Hello! I&amp;rsquo;m Kevin Chan. I will be starting to publish post about my personal life moments and thoughts. The main reason for me to post blogs is to:
Let my family and friends know what I am up to. Let my future self know what I was up to. Help me practice writing in different languages. Make me much more productive and record more moments of my life. Let&amp;rsquo;s get started!</description>
    </item>
    
    <item>
      <title>Markdown Samples</title>
      <link>https://t-sekai.github.io/posts/markdown-sample/</link>
      <pubDate>Mon, 08 Jun 2020 08:06:25 +0600</pubDate>
      
      <guid>https://t-sekai.github.io/posts/markdown-sample/</guid>
      <description>This is a sample post intended to test the followings:
A different post author. Table of contents. Markdown content rendering. Math rendering. Emoji rendering. Markdown Syntax Rendering Headings The following HTML &amp;lt;h1&amp;gt;â€”&amp;lt;h6&amp;gt; elements represent six levels of section headings. &amp;lt;h1&amp;gt; is the highest section level while &amp;lt;h6&amp;gt; is the lowest.
H1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur?</description>
    </item>
    
    <item>
      <title>Rich Content</title>
      <link>https://t-sekai.github.io/posts/rich-content/</link>
      <pubDate>Mon, 08 Jun 2020 08:06:25 +0600</pubDate>
      
      <guid>https://t-sekai.github.io/posts/rich-content/</guid>
      <description>This sample post tests the followings:
Category, sub-category nesting in the sidebar. Hero image and other images are in images folder inside this post directory. Different media rendering like image, tweet, YouTube video, Vimeo video etc. Image Sample Tweet Sample Owl bet you&amp;#39;ll lose this staring contest ðŸ¦‰ pic.twitter.com/eJh4f2zncC
&amp;mdash; San Diego Zoo Wildlife Alliance (@sandiegozoo) October 26, 2021 YouTube Video Sample Vimeo Video Sample </description>
    </item>
    
    <item>
      <title>Shortcodes Samples</title>
      <link>https://t-sekai.github.io/posts/shortcodes/</link>
      <pubDate>Mon, 08 Jun 2020 08:06:25 +0600</pubDate>
      
      <guid>https://t-sekai.github.io/posts/shortcodes/</guid>
      <description>This is a sample post intended to test the followings:
Default hero image. Different shortcodes. Alert The following alerts are available in this theme.
This is sample alert with type=&amp;quot;success&amp;quot;. This is sample alert with type=&amp;quot;danger&amp;quot;. This is sample alert with type=&amp;quot;warning&amp;quot;. This is sample alert with type=&amp;quot;info&amp;quot;. This is sample alert with type=&amp;quot;dark&amp;quot;. This is sample alert with type=&amp;quot;primary&amp;quot;. This is sample alert with type=&amp;quot;secondary&amp;quot;. Image A sample image without any attribute.</description>
    </item>
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    <item>
      <title>Introduction</title>
      <link>https://t-sekai.github.io/notes/go/basic/introduction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://t-sekai.github.io/notes/go/basic/introduction/</guid>
      <description> Hello World A sample go program is show here.
package main import &amp;#34;fmt&amp;#34; func main() { message := greetMe(&amp;#34;world&amp;#34;) fmt.Println(message) } func greetMe(name string) string { return &amp;#34;Hello, &amp;#34; + name + &amp;#34;!&amp;#34; } Run the program as below:
$ go run hello.go Variables Normal Declaration:
var msg string msg = &amp;#34;Hello&amp;#34; Shortcut:
msg := &amp;#34;Hello&amp;#34; Constants const Phi = 1.618 </description>
    </item>
    
    <item>
      <title>Basic Types</title>
      <link>https://t-sekai.github.io/notes/go/basic/types/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://t-sekai.github.io/notes/go/basic/types/</guid>
      <description>Strings str := &amp;#34;Hello&amp;#34; Multiline string
str := `Multiline string` Numbers Typical types
num := 3 // int num := 3. // float64 num := 3 + 4i // complex128 num := byte(&amp;#39;a&amp;#39;) // byte (alias for uint8) Other Types
var u uint = 7 // uint (unsigned) var p float32 = 22.7 // 32-bit float Arrays // var numbers [5]int numbers := [...]int{0, 0, 0, 0, 0} Pointers func main () { b := *getPointer() fmt.</description>
    </item>
    
    <item>
      <title>Flow Control</title>
      <link>https://t-sekai.github.io/notes/go/basic/flow-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://t-sekai.github.io/notes/go/basic/flow-control/</guid>
      <description>Condition if day == &amp;#34;sunday&amp;#34; || day == &amp;#34;saturday&amp;#34; { rest() } else if day == &amp;#34;monday&amp;#34; &amp;amp;&amp;amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(&amp;#34;Uh oh&amp;#34;) Switch switch day { case &amp;#34;sunday&amp;#34;: // cases don&amp;#39;t &amp;#34;fall through&amp;#34; by default! fallthrough case &amp;#34;saturday&amp;#34;: rest() default: work() } Loop for count := 0; count &amp;lt;= 10; count++ { fmt.Println(&amp;#34;My counter is at&amp;#34;, count) } entry := []string{&amp;#34;Jack&amp;#34;,&amp;#34;John&amp;#34;,&amp;#34;Jones&amp;#34;} for i, val := range entry { fmt.</description>
    </item>
    
    <item>
      <title>I/O</title>
      <link>https://t-sekai.github.io/notes/java/basic/io/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://t-sekai.github.io/notes/java/basic/io/</guid>
      <description>Scanner Scanner sc = new Scanner(System.in); int n = sc.nextInt(); long ln = sc.nextLong(); double dn = sc.nextDouble(); String s = sc.read(); //sc.readLine(); BufferedReader BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int n = Integer.parseInt(br.readLine()); int a[] = new int[n]; //n elements in one line StringTokenizer st = new StringTokenizer(br.readLine()); for(int i = 0; i &amp;lt; n; ++i){ a[i] = Integer.parseInt(st.nextToken()); } StreamTokenizer private static StreamTokenizer st; private static int nextInt() throws IOException{ st.</description>
    </item>
    
    <item>
      <title>File Manipulation</title>
      <link>https://t-sekai.github.io/notes/go/advanced/files/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://t-sekai.github.io/notes/go/advanced/files/</guid>
      <description> Condition if day == &amp;#34;sunday&amp;#34; || day == &amp;#34;saturday&amp;#34; { rest() } else if day == &amp;#34;monday&amp;#34; &amp;amp;&amp;amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(&amp;#34;Uh oh&amp;#34;) </description>
    </item>
    
    <item>
      <title>Bash Variables</title>
      <link>https://t-sekai.github.io/notes/bash/basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://t-sekai.github.io/notes/bash/basic/</guid>
      <description> Variable NAME=&amp;#34;John&amp;#34; echo $NAME echo &amp;#34;$NAME&amp;#34; echo &amp;#34;${NAME} Condition if [[ -z &amp;#34;$string&amp;#34; ]]; then echo &amp;#34;String is empty&amp;#34; elif [[ -n &amp;#34;$string&amp;#34; ]]; then echo &amp;#34;String is not empty&amp;#34; fi </description>
    </item>
    
    
    
  </channel>
</rss>
