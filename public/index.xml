<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>t-sekai</title>
    <link>https://tsekai.com/</link>
    <description>Recent content on t-sekai</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 18 Apr 2023 01:19:00 -0800</lastBuildDate><atom:link href="https://tsekai.com/index.xml" rel="self" type="application/rss+xml" /><item>
      <title>Fishes in the Tank and the Ocean</title>
      <link>https://tsekai.com/posts/life/2023/april/18/</link>
      <pubDate>Tue, 18 Apr 2023 01:19:00 -0800</pubDate>
      
      <guid>https://tsekai.com/posts/life/2023/april/18/</guid>
      <description>Birch Aquarium </description>
    </item>
    
    <item>
      <title>Won $100 :)</title>
      <link>https://tsekai.com/posts/life/2023/april/10/</link>
      <pubDate>Mon, 10 Apr 2023 01:09:50 -0800</pubDate>
      
      <guid>https://tsekai.com/posts/life/2023/april/10/</guid>
      <description>Food On Wednesday March 8, I arrived, for the first time, at Mo-mo paradise in Mira Mesa with Alan and Eric for all-you-can-eat shabu-shabu and sukiyaki. We all got very full and enjoyed the meal. Right after, we decided to go to the Meet Fresh that is also in Mira Mesa. Since Eric and I have to get back to campus for a contest in time, we ran to the bus station and took the bus to the Meet Fresh.</description>
    </item>
    
    <item>
      <title>Scholar Society at Mission Beach</title>
      <link>https://tsekai.com/posts/life/2023/march/29/</link>
      <pubDate>Wed, 29 Mar 2023 01:00:00 -0700</pubDate>
      
      <guid>https://tsekai.com/posts/life/2023/march/29/</guid>
      <description>Scholar Society Escape Room On Sunday March 5 (3/5), I attended the delayed Scholar Society Escape Room that I signed up for a while ago. I met up with the other members on a car ride to Mission Beach at 9 in the morning. We arrived there early, so we grabbed some drinks at the Starbucks nearby to wait for the other group of members to arrive. The Belmont Park was right next by.</description>
    </item>
    
    <item>
      <title>Snow in San Diego?</title>
      <link>https://tsekai.com/posts/life/2023/march/14/</link>
      <pubDate>Tue, 14 Mar 2023 04:20:50 -0700</pubDate>
      
      <guid>https://tsekai.com/posts/life/2023/march/14/</guid>
      <description>Coco Ichibanya On Wednesday March 1 (3/1), I went to Convoy with Alan, the biggest fan of Coco Ichibanya, right after the LaTeX freshman seminar from Mayer Hall in Revelle. Instead of Lyft/Uber, we went on a MTS this time. We had to change lanes from UCSD to UTC, then UTC to Convoy. It took about 40 minutes to get there. It was worth it because we were eating at Coco that day.</description>
    </item>
    
    <item>
      <title>SoCal ICPC 2023</title>
      <link>https://tsekai.com/posts/life/2023/march/1/</link>
      <pubDate>Wed, 01 Mar 2023 03:31:50 -0800</pubDate>
      
      <guid>https://tsekai.com/posts/life/2023/march/1/</guid>
      <description>Leaving UCSD Four days ago (2/25), I participated in the ICPC Southern California Regionals at Riverside City College. ICPC stands for International Collegiate Programming Contest. It was my first time participating adn representing UCSD, so I was very excited. I was part of the second UCSD team: UCSD Team 2. My teammates were Shubham and Victor.
Since network is prohibbited during the contest, I had to compute a reference sheet the night beforehand.</description>
    </item>
    
    <item>
      <title>Upcoming</title>
      <link>https://tsekai.com/posts/upcoming/</link>
      <pubDate>Wed, 01 Mar 2023 03:02:50 -0800</pubDate>
      
      <guid>https://tsekai.com/posts/upcoming/</guid>
      <description>List of Upcoming Blogs:
2023 Winter Quarter Summary Birch Aquarium and La Jolla Cove üç≤ ~ üå∏ ~ üèõ ~ üá∫üá∏ 2023 Spring Break (Ongoing) 2023 Spring Quarter Start Sunset by the Cliff Etc. (Earlier events) </description>
    </item>
    
    <item>
      <title>Introduction</title>
      <link>https://tsekai.com/posts/introduction/</link>
      <pubDate>Wed, 01 Mar 2023 03:01:50 -0800</pubDate>
      
      <guid>https://tsekai.com/posts/introduction/</guid>
      <description>Hello! I&amp;rsquo;m Kevin Chan. I will be starting to publish post about my personal life moments and thoughts. The main reason for me to post blogs is to:
Let my family and friends know what I am up to. Let my future self know what I was up to. Help me practice writing in different languages. Make me much more productive and record more moments of my life. Let&amp;rsquo;s get started!</description>
    </item>
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    <item>
      <title>Introduction</title>
      <link>https://tsekai.com/notes/go/basic/introduction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tsekai.com/notes/go/basic/introduction/</guid>
      <description> Hello World A sample go program is show here.
package main import &amp;#34;fmt&amp;#34; func main() { message := greetMe(&amp;#34;world&amp;#34;) fmt.Println(message) } func greetMe(name string) string { return &amp;#34;Hello, &amp;#34; + name + &amp;#34;!&amp;#34; } Run the program as below:
$ go run hello.go Variables Normal Declaration:
var msg string msg = &amp;#34;Hello&amp;#34; Shortcut:
msg := &amp;#34;Hello&amp;#34; Constants const Phi = 1.618 </description>
    </item>
    
    <item>
      <title>Basic Types</title>
      <link>https://tsekai.com/notes/go/basic/types/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tsekai.com/notes/go/basic/types/</guid>
      <description>Strings str := &amp;#34;Hello&amp;#34; Multiline string
str := `Multiline string` Numbers Typical types
num := 3 // int num := 3. // float64 num := 3 + 4i // complex128 num := byte(&amp;#39;a&amp;#39;) // byte (alias for uint8) Other Types
var u uint = 7 // uint (unsigned) var p float32 = 22.7 // 32-bit float Arrays // var numbers [5]int numbers := [...]int{0, 0, 0, 0, 0} Pointers func main () { b := *getPointer() fmt.</description>
    </item>
    
    <item>
      <title>Flow Control</title>
      <link>https://tsekai.com/notes/go/basic/flow-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tsekai.com/notes/go/basic/flow-control/</guid>
      <description>Condition if day == &amp;#34;sunday&amp;#34; || day == &amp;#34;saturday&amp;#34; { rest() } else if day == &amp;#34;monday&amp;#34; &amp;amp;&amp;amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(&amp;#34;Uh oh&amp;#34;) Switch switch day { case &amp;#34;sunday&amp;#34;: // cases don&amp;#39;t &amp;#34;fall through&amp;#34; by default! fallthrough case &amp;#34;saturday&amp;#34;: rest() default: work() } Loop for count := 0; count &amp;lt;= 10; count++ { fmt.Println(&amp;#34;My counter is at&amp;#34;, count) } entry := []string{&amp;#34;Jack&amp;#34;,&amp;#34;John&amp;#34;,&amp;#34;Jones&amp;#34;} for i, val := range entry { fmt.</description>
    </item>
    
    <item>
      <title>I/O</title>
      <link>https://tsekai.com/notes/java/basic/io/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tsekai.com/notes/java/basic/io/</guid>
      <description>Scanner Scanner sc = new Scanner(System.in); int n = sc.nextInt(); long ln = sc.nextLong(); double dn = sc.nextDouble(); String s = sc.read(); //sc.readLine(); BufferedReader BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int n = Integer.parseInt(br.readLine()); int a[] = new int[n]; //n elements in one line StringTokenizer st = new StringTokenizer(br.readLine()); for(int i = 0; i &amp;lt; n; ++i){ a[i] = Integer.parseInt(st.nextToken()); } StreamTokenizer private static StreamTokenizer st; private static int nextInt() throws IOException{ st.</description>
    </item>
    
    <item>
      <title>File Manipulation</title>
      <link>https://tsekai.com/notes/go/advanced/files/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tsekai.com/notes/go/advanced/files/</guid>
      <description> Condition if day == &amp;#34;sunday&amp;#34; || day == &amp;#34;saturday&amp;#34; { rest() } else if day == &amp;#34;monday&amp;#34; &amp;amp;&amp;amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(&amp;#34;Uh oh&amp;#34;) </description>
    </item>
    
    <item>
      <title>Bash Variables</title>
      <link>https://tsekai.com/notes/bash/basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tsekai.com/notes/bash/basic/</guid>
      <description> Variable NAME=&amp;#34;John&amp;#34; echo $NAME echo &amp;#34;$NAME&amp;#34; echo &amp;#34;${NAME} Condition if [[ -z &amp;#34;$string&amp;#34; ]]; then echo &amp;#34;String is empty&amp;#34; elif [[ -n &amp;#34;$string&amp;#34; ]]; then echo &amp;#34;String is not empty&amp;#34; fi </description>
    </item>
    
    
    
  </channel>
</rss>
